퍼블릭 디렉토리의 이미지 파일은 웹의 최상위 경로에서 디렉토리명이 없이 바로 이미지주소에 

접근이 가능하다. 

Image 컴포넌트는 성능최적화를 자동으로 처리해주며, 다양한 기능을 제공한다.

**필수옵션 *** 

크기를 반드시 명시해야한다. 

- `layout="responsive"`: 부모 컨테이너에 맞춰 비율에 맞게 크기가 자동으로 조정됩니다. `width`와 `height`는 원본 이미지의 비율을 계산하는 데 사용됩니다.
- `layout="intrinsic"`: 원본 이미지 크기에 맞춰 비례적으로 크기가 조정됩니다. 부모 크기 변경에 따라 크기가 자동으로 맞춰집니다.
- `layout="fill"`: 부모 요소의 크기를 완전히 채우도록 이미지를 맞춥니다. `objectFit`을 사용해 이미지 비율을 조정할 수 있습니다.

따라서, `width`와 `height`를 명시하지 않고 자동으로 크기를 조정하려면 `layout="fill"` 또는 `layout="intrinsic"`와 같은 옵션을 적절히 사용하여 이미지를 부모 컨테이너에 맞게 조정할 수 있습니다.

**사용 예시 코드** 

```jsx
import Image from 'next/image';

<Image
  src="/path/to/image.jpg"
  alt="Description"
  width={500}
  height={300}
/>
```

## img 태그가 아닌 Image 컴포넌트를 사용했을 때 장점.

1. 자동최적화  -  컴포넌트는 이미지를 최적화 시키고, 필요에 따라 다양한 해상도와 
    
    크기의 이미지를 제공한다.
    
    자동으로 이미지를 압축하고, 웹에서 효율적인 포맷(예: WepP)으로 변환하여 로딩 속도를 
    
    빠르게 한다.
    
2. 레이지 로딩 (Lazy Loading) - 컴포넌트는 기본적으로 레이지 로딩을 지원한다. 
    
    사용자가 해당 이미지가 화면에 보일 때까지 로딩하지 않아서 초기 로딩 속도를 개선할 수 있따.
    
3. 반응형 이미지 지원 - 컴포넌트는 sizes 속성을 사용하여 다양한 화면 크기에서 최적의 이미지를 
    
    자동으로 선택할 수 있다.
    
    srcSet 과 sizes 속성을 사용하여 다양한 화면 크기에서 최적의 이미지를 자동으로 선택.
    
4. 자동으로 고해상도 이미지 지원
