임베디드 핵심 용어 + 상황  


 개념 | 언제/어디서 사용되나? | 예시 상황 |
 --- | --- | --- |
 **MCU** | 임베디드 시스템의 중심 두뇌 | Arduino, ESP32, STM32 등 사용 시 |
 **GPIO** | 외부 장치와 단순 ON/OFF 통신 | 버튼 누르기, LED 켜기 |
 **ADC** | 아날로그 센서 값 읽기 | 온도센서, 조도센서 값 측정 |
 **PWM** | 모터 속도, 밝기 조절 등 아날로그 흉내 낼 때 | LED 밝기, 서보모터 각도 제어 |
 **UART** | PC와 통신하거나, 센서와 직렬 통신 | 시리얼 모니터에 값 출력, GPS 모듈 통신 |
 **I2C** | 여러 센서를 간단히 연결할 때 | OLED 디스플레이, 가속도센서 연결 |
 **SPI** | 빠른 통신이 필요할 때 | SD카드, 고속 센서, 디스플레이 |
 **인터럽트** | 빠르게 반응해야 하는 이벤트 발생 시 | 버튼 누르면 바로 반응, 외부 신호 감지 |
 **레지스터** | MCU의 하드웨어 세부 설정 조작할 때 | 포트 직접 제어, 속도 튜닝 |
 **플래시 메모리** | 프로그램 저장할 때 | MCU에 코드 업로드할 때 |
 **RAM** | 코드 실행 중 데이터 저장 | 변수 저장, 센서값 임시 보관 |
 **펌웨어** | 장치에 올라간 프로그램 자체 | 센서제어 프로그램, 자동문 제어 |
 **타이머/카운터** | 정해진 시간마다 반복 동작 | 1초마다 LED 토글, 시간 측정 |
 **보드레이트** | UART 통신 시 속도 설정 | 시리얼 모니터와 데이터 송수신 |
 **디지털 입력/출력** | 단순 ON/OFF 값 제어 | 스위치, 릴레이, LED |
 **아날로그 입력** | 센서 값 읽을 때 | 온도, 조도 등 비연속적 값 |
 **풀업/풀다운 저항** | 입력 핀이 안정되지 않을 때 | 버튼이 눌리지 않았을 때 기본 상태 유지 |
 **펄스** | 신호나 트리거 발생 | 초음파 센서에서 트리거 신호 보내기 |
 **디바운싱** | 버튼이 여러 번 눌린 것처럼 보일 때 방지 | 버튼 누를 때 흔들림 제거 |
 **센서** | 데이터를 감지할 때 | 온도, 거리, 가속도 등 감지 |
 **액추에이터** | 물리적 작동이 필요할 때 | 모터 돌리기, 부저 울리기 |
 GND (Ground) | 접지, 기준점 | 전기회로에서 전기가 안전하게 흐를 수 있도록 ,             회로의 끝 |
 Vin(Voltage In) | 전압 | 외부 전원을 보드나 회로에 공급하는 전압을 나타낸다.  외부 전원에서 보드로 전압을 입력받는 핀 |
