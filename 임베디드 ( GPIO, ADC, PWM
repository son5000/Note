# GPIO, ADC, PWM

### 1. **GPIO (General Purpose Input/Output)**

### 정의:

**GPIO**는 **일반 목적의 입출력 핀**으로, 디지털 신호를 **입력**하거나 **출력**할 수 있는 핀이야.

- **입력**: 외부 신호를 읽어오는 역할 (예: 버튼, 센서)
- **출력**: 외부 장치를 제어하는 역할 (예: LED, 릴레이)

### 특성:

- **디지털 신호**만 처리 (0 또는 1, HIGH 또는 LOW)
- **입력/출력** 모드로 설정 가능
- **값**: HIGH(1) 또는 LOW(0)
    - **입력** 시: 버튼, 센서 등의 신호를 읽음
    - **출력** 시: LED를 켜거나, 다른 장치를 제어

### 처리할 수 있는 값:

- **디지털 값** (0 또는 1)

### 예시:

- 버튼을 **입력**으로 사용하여, 눌리면 **HIGH** 값을 읽고, 그렇지 않으면 **LOW**
- LED를 **출력**으로 사용하여, **HIGH**일 때 켜고, **LOW**일 때 끔

### 2. **ADC (Analog-to-Digital Converter)**

### 정의:

**ADC**는 **아날로그 값을 디지털 값으로 변환**하는 장치야. 아날로그 신호를 **디지털 신호**로 변환하여 MCU가 처리할 수 있도록 해.

### 특성:

- **아날로그 신호**를 처리 (예: 온도, 조도, 압력 등 연속적인 값)
- **입력**만 가능 (ADC 핀에 아날로그 신호가 들어감)
- **디지털 값**으로 변환하여 MCU가 읽을 수 있게 해
- 변환 후, 값은 보통 **0-1023** 범위 (10-bit 해상도)로 표시

### 처리할 수 있는 값:

- **연속적인 아날로그 값**을 디지털로 변환한 값 (예: 0~~5V를 0~~1023 범위로 변환)

### 예시:

- **온도 센서**에서 나오는 아날로그 신호를 읽어서, 디지털 값으로 변환하여 온도를 계산함
- **조도 센서**에서 나오는 아날로그 신호를 읽어 밝기를 측정

### 3. **PWM (Pulse Width Modulation)**

### 정의:

**PWM**은 **디지털 신호**를 **아날로그처럼 제어**할 수 있게 해주는 기술로, **펄스의 폭**을 조절하여 평균 전압을 제어하는 방식이야. 이걸 통해 **아날로그 값처럼 조정**할 수 있어.

### 특성:

- **출력**만 가능 (디지털 핀에서 출력)
- **주기**와 **펄스 폭**을 제어하여 평균 전압을 만들 수 있음
    - 예: 50% PWM은 "ON/OFF"가 **1:1** 비율로 반복됨 → 평균적으로 **5V의 50%**처럼 동작
- **속도 조절**, **밝기 조절** 등 아날로그처럼 동작하지만, 사실 디지털 신호임
- **출력 주파수**와 **펄스 폭**을 조절하여 아날로그처럼 보이는 효과

### 처리할 수 있는 값:

- **디지털 값** (0~255 범위, 보통 8비트로 설정)
    - 0은 "완전 OFF", 255는 "완전 ON", 중간 값은 **펄스의 폭**에 따라 평균 전압을 결정

### 예시:

- **모터 속도 조절**: PWM을 이용해 모터에 공급하는 전압을 조절하여 속도를 변화시킬 수 있음
- **LED 밝기 조절**: PWM을 사용해 LED에 공급하는 전압을 조절하여 밝기를 변화시킬 수 있음

### 요약
